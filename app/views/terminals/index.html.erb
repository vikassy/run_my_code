<ul class="nav nav-tabs">
	<li class="active"><a href="#terminal-1" data-toggle="pill">Terminal 1</a></li>
	<li><a href="#terminal-2" data-toggle="pill">Terminal 2</a></li>
</ul>

<div class="tab-content" style="position:relative">


	<div id="terminal-1" class="tab-pane active">
		<img style="position:fixed; left: 45%; top: 45%; z-index:1; height:40px; display:none" src="/assets/loading51.gif" id="loading-img"/>
		
		<pre id="output" style="height:300px; overflow:auto;"></pre>

		<div class="row-fluid">
			<div class="span6">
				<form id="myForm" class="form-inline" action="/terminals/0/execute">
					<input type="text" class="input-large" style="width:70%" name="command" placeholder="Enter Command" autocomplete="off">
					<button type="submit" class="btn btn-primary">Go</button>
				</form>
			</div>
			<div class="span6">
				<!--<button id="refresh" class="btn btn-success">Get Data</button> -->
				<button id="kill" class="btn">Kill process</button>
				<button id="reset" class="btn">Reset</button>
			</div>
		</div>
	</div>
	
	<div id="terminal-2" class="tab-pane">
		<img style="position:fixed; left: 45%; top: 45%; z-index:1; height:40px; display:none" src="/assets/loading51.gif" id="loading-img"/>
		
		<pre id="output" style="height:300px; overflow:auto;"></pre>

		<div class="row-fluid">
			<div class="span6">
				<form id="myForm" class="form-inline" action="/terminals/1/execute">
					<input type="text" class="input-large" style="width:70%" name="command" placeholder="Enter Command" autocomplete="off">
					<button type="submit" class="btn btn-primary">Go</button>
				</form>
			</div>
			<div class="span6">
				<!--<button id="refresh" class="btn btn-success">Get Data</button>-->
				<button id="kill" class="btn">Kill process</button>
				<button id="reset" class="btn">Reset</button>
			</div>
		</div>
	</div>

</div><!-- tab-content -->

<script> 
	// wait for the DOM to be loaded 
	$(document).ready(function() {

		
		
		t1 = new CodelearnTerminal('terminal-1',0)
		t1.setup()

		t2 = new CodelearnTerminal('terminal-2',1)
		t2.setup()

	});

function CodelearnTerminal(_id,_number) {
	
	var id = _id

	var objDiv = document.getElementById(id).getElementsByTagName('pre')[0];
	var removeFirstOutputLine = false

	function getElement(element) {
		return $("#"+id+" "+element)
	}

	this.setup = function() {
		
		getElement('#myForm').ajaxForm({
			beforeSubmit: function() {
				getElement("#loading-img").show()
				getElement("#output").append(getElement("input[name='command']").val())
				getElement("input[name='command']").val('');
				removeFirstOutputLine = true
				//_setTimeout(function(){ poll(fetchData) }, 1000)
			}
			, success: function(data) {  fetchData(data)  }
			,complete: function() { 
				getElement("input[name='command']").focus(); 
			}
			, error: function() {
				alert("an error has occured")
				getElement("#loading-img").hide()
			}
		});

		getElement("#refresh").click(function(){ poll(fetchData) });

		getElement("#kill").click(function(){
			$.ajax ({
				beforeSend: function() {
					getElement("#loading-img").show()
				},
				url: "/terminals/"+_number+"/kill",
				success: function(data){ fetchData(data) }
				, error: function() {
					alert("an error has occured")
					getElement("#loading-img").hide()
				}
			})
		})

		getElement("#reset").click(function(){
			$.ajax({
				beforeSend: function() {
					getElement("#output").html('')
					getElement("#loading-img").show()
				}
				, url: "/terminals/"+_number+"/reset",
				success: function(data) { fetchData(data) }
				, error: function() {
					alert("an error has occured")
					getElement("#loading-img").hide()
				}
			})
		})

		initialize();

	}

	function initialize() {
		getElement("#output").html('')

		$.ajax({
			beforeSend: function() {
				getElement("#loading-img").show()
			},
			url: "/terminals/"+_number+"/execute/",
			success: function(data) { fetchData(data) }
			,complete: function() { getElement("input[name='command']").focus(); }
			, error: function() {
					alert("an error has occured")
					getElement("#loading-img").hide()
			}
		})
	}

	var Scheduled
	function _setTimeout(func,time) {
		clearTimeout(Scheduled)
		Scheduled = setTimeout(func,time)
	}

	function fetchData(data) {
		if ( data.content != "") { 
			//console.log("Data received - " + data.content)
			if (removeFirstOutputLine) {
				data.content = data.content.replace(/^.*?\r\n/,"\r\n")
				removeFirstOutputLine = false
			}
			getElement("#output").append(data.content)
			objDiv.scrollTop = objDiv.scrollHeight
		}
		if ( data.status == "waiting" ) {
			_setTimeout(function() {poll(fetchData)}, 1000)
		}
		else if (data.status == "error") {
			initialize()
		}
		else { //complete
			clearTimeout(Scheduled)
			getElement("#loading-img").hide()
		}
	}


	function poll(func) {
		console.log("inside poll")
		$.ajax( {
			beforeSend: function() {
				getElement("#loading-img").show()
			},
			url: "/terminals/"+_number+"/get",
			success : function(data, textStatus, jqXHR){
				if ( data == "" ) {
					_setTimeout(function() {poll(func)}, 1000)
				}
				else {
					func(data)
				}
			}
			, error: function() {
					alert("an error has occured")
					getElement("#loading-img").hide()
			}
		})
	}
}

</script> 
